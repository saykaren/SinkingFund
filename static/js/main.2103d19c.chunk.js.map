{"version":3,"sources":["Components/assets/sayKaren_logo-white_8.1.2019.png","Components/App/TestData.tsx","Components/App/Footer.tsx","Components/App/StartData.tsx","Components/App/Table.tsx","Components/App/App.tsx","serviceWorker.js","index.js"],"names":["module","exports","TestData","monthId","monthName","begBalance","endBalance","monthData","title","cost","monthIN","monthContributions","contribution","Footer","id","className","href","target","rel","src","sayKarenLogo","alt","StartData","Table","data","useState","copyData","setCopyData","onClick","map","num","index","exp","key","App","setData","initialFunding","setInitialFunding","costTitle","setCostTitle","costAmount","setCostAmount","contributionTitle","setContributionTitle","contributionAmount","setContributionAmount","optionsConstState","setOptionsConstState","optionsState","setOptionsState","monthlyContribution","setMonthlyContribution","menu","setMenu","startMonth","setStartMonth","useEffect","storedData","localStorage","getItem","monthlyContributionStorage","JSON","parse","setItem","stringify","Date","now","handleUpdate","month","initialData","splice","handleUpdateDataState","handleRemoveContribution","object","januaryCosts","reduce","acc","janContribution","number","monthIndex","totalCost","sumMonthlyCost","type","value","onChange","e","arg1","parseFloat","currentTarget","placeholder","required","undefined","push","handleAdditionExpense","parseInt","handleAdditionContribution","toFixed","length","clear","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2103d19c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sayKaren_logo-white_8.1.2019.d0827d01.png\";","export interface TestDataProps {\n  monthId: number;\n  monthName: string;\n  begBalance: number;\n  endBalance: number;\n  monthData: [\n    {\n      title: string;\n      cost: number;\n      monthIn: number;\n    },\n  ];\n  monthContributions?: [\n    { title: string; contribution: number; monthIN: number },\n  ];\n}\nexport const TestData = [\n  {\n    monthId: 1,\n    monthName: 'January',\n    begBalance: 4000,\n    endBalance: 4496,\n    monthData: [{ title: 'HOA', cost: 204, monthIN: 1 }],\n    monthContributions: [],\n  },\n  {\n    monthId: 2,\n    monthName: 'February',\n    begBalance: 4496,\n    endBalance: 3920.11,\n    monthData: [{ title: 'Property Taxes', cost: 1275.89, monthIN: 2 }],\n    monthContributions: [],\n  },\n  {\n    monthId: 3,\n    monthName: 'March',\n    begBalance: 3920.11,\n    endBalance: 4620.11,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 4,\n    monthName: 'April',\n    begBalance: 4620.11,\n    endBalance: -216.49,\n    monthData: [\n      { title: 'Income Taxes', cost: 4000, monthIN: 4 },\n      { title: 'Home Insurance', cost: 865.73, monthIN: 4 },\n      { title: 'Auto Insurance', cost: 670.87, monthIN: 4 },\n    ],\n    monthContributions: [],\n  },\n  {\n    monthId: 5,\n    monthName: 'May',\n    begBalance: -216.49,\n    endBalance: 483.51,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 6,\n    monthName: 'June',\n    begBalance: 483.51,\n    endBalance: -92.38,\n    monthData: [{ title: 'Property Taxes', cost: 1275.89, monthIN: 6 }],\n    monthContributions: [],\n  },\n  {\n    monthId: 7,\n    monthName: 'July',\n    begBalance: -92.38,\n    endBalance: 298.12,\n    monthData: [\n      { title: 'HOA Dues', cost: 189.5, monthIN: 7 },\n      { title: 'Amazon', cost: 120, monthIN: 7 },\n    ],\n    monthContributions: [],\n  },\n  {\n    monthId: 8,\n    monthName: 'August',\n    begBalance: 298.12,\n    endBalance: 327.25,\n    monthData: [{ title: 'Life Insurance', cost: 670.87, monthIN: 8 }],\n    monthContributions: [],\n  },\n  {\n    monthId: 9,\n    monthName: 'September',\n    begBalance: 327.25,\n    endBalance: 1027.25,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 10,\n    monthName: 'October',\n    begBalance: 1027.25,\n    endBalance: 1727.25,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 11,\n    monthName: 'November',\n    begBalance: 1727.25,\n    endBalance: 2307.25,\n    monthData: [{ title: 'Costco', cost: 120, monthIN: 11 }],\n    monthContributions: [],\n  },\n  {\n    monthId: 12,\n    monthName: 'December',\n    begBalance: 2307.25,\n    endBalance: 2866.7,\n    monthData: [{ title: 'Vehicle Registration', cost: 240.55, monthIN: 12 }],\n    monthContributions: [{ title: 'testing', contribution: 100, monthIN: 12 }],\n  },\n];\n\nexport default TestData;\n","import React from 'react';\nimport sayKarenLogo from '../assets/sayKaren_logo-white_8.1.2019.png';\n\nconst Footer = () => (\n  <footer id=\"footer\" className=\"footerDetails\">\n    Website created by:\n    <a href=\"http://saykaren.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <img\n        src={sayKarenLogo}\n        className=\"footerDetails\"\n        id=\"sayKarenLogo\"\n        alt=\"sayKaren.com\"\n      />\n    </a>\n  </footer>\n);\n\nexport default Footer;\n","export interface TestDataProps {\n  monthId: number;\n  monthName: string;\n  begBalance: number;\n  endBalance: number;\n  monthData: [\n    {\n      title: string;\n      cost: number;\n      monthIn: number;\n    },\n  ];\n  monthContributions?: [\n    { title: string; contribution: number; monthIN: number },\n  ];\n}\nexport const StartData = [\n  {\n    monthId: 1,\n    monthName: 'January',\n    begBalance: 1000,\n    endBalance: 1000,\n    monthData: [{ title: 'EXAMPLE', cost: 1, monthIN: 1 }],\n    monthContributions: [{ title: 'EXAMPLE', contribution: 1, monthIN: 1 }],\n  },\n  {\n    monthId: 2,\n    monthName: 'February',\n    begBalance: 1002,\n    endBalance: 1000,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 3,\n    monthName: 'March',\n    begBalance: 1000,\n    endBalance: 1000,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 4,\n    monthName: 'April',\n    begBalance: 1000,\n    endBalance: 1000,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 5,\n    monthName: 'May',\n    begBalance: 1000,\n    endBalance: 1000,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 6,\n    monthName: 'June',\n    begBalance: 1000,\n    endBalance: 1000,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 7,\n    monthName: 'July',\n    begBalance: 1000,\n    endBalance: 1000,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 8,\n    monthName: 'August',\n    begBalance: 1000,\n    endBalance: 1000,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 9,\n    monthName: 'September',\n    begBalance: 1000,\n    endBalance: 1000,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 10,\n    monthName: 'October',\n    begBalance: 1000,\n    endBalance: 1000,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 11,\n    monthName: 'November',\n    begBalance: 1000,\n    endBalance: 1000,\n    monthData: [],\n    monthContributions: [],\n  },\n  {\n    monthId: 12,\n    monthName: 'December',\n    begBalance: 1000,\n    endBalance: 1000,\n    monthData: [],\n    monthContributions: [],\n  },\n];\n\nexport default StartData;\n","import React, { useState } from 'react';\nimport dataProps from './Interface';\n\nconst Table = ({ data }: dataProps) => {\n  const [copyData, setCopyData] = useState(false);\n\n  return (\n    <>\n      <button onClick={() => setCopyData(!copyData)}>Data Tables</button>\n      {copyData && (\n        <>\n          <h2 id=\"table-header\">Copy Data Below to Store in Excel</h2>\n          <table id=\"table-to-xls\">\n            <thead>\n              <tr>\n                <th>Expense Title</th>\n                <th>Expense Cost</th>\n                <th>Expense Month</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data &&\n                data.map(\n                  (num, index) =>\n                    num.monthData &&\n                    num.monthData.map((exp, index) => (\n                      <tr key={`row${index}`}>\n                        <td key={`title${index}`} id={`title${index}`}>\n                          {exp.title}\n                        </td>\n                        <td key={`cost${index}`}>{exp.cost}</td>\n                        <td key={`month${index}`}>{exp.monthIN}</td>\n                      </tr>\n                    )),\n                )}\n            </tbody>\n          </table>\n          <table id=\"table-to-xls\">\n            <thead>\n              <tr>\n                <th>Contribution Title</th>\n                <th>Contribution Cost</th>\n                <th>Contribution Month</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data &&\n                data.map(\n                  (num, index) =>\n                    num.monthContributions &&\n                    num.monthContributions.map((exp, index) => (\n                      <tr key={`row${index}`}>\n                        <td key={`titleCont${index}`} id={`title${index}`}>\n                          {exp.title}\n                        </td>\n                        <td key={`contribution${index}`}>{exp.contribution}</td>\n                        <td key={`monthCont${index}`}>{exp.monthIN}</td>\n                      </tr>\n                    )),\n                )}\n            </tbody>\n          </table>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Table;\n","import React, { useState, useEffect } from 'react';\nimport '../Styling/App.scss';\nimport TestData from './TestData';\nimport Footer from './Footer';\nimport StartData from './StartData';\n// import dataProps from \"./Interface\";\nimport Table from './Table';\n\nconst App = () => {\n  const [data, setData] = useState(StartData);\n\n  //Input section\n  const [initialFunding, setInitialFunding] = useState(data[0].begBalance);\n  const [costTitle, setCostTitle] = useState<string>('');\n  const [costAmount, setCostAmount] = useState<number>(0);\n  const [contributionTitle, setContributionTitle] = useState<string>('');\n  const [contributionAmount, setContributionAmount] = useState<number>(0);\n  const [optionsConstState, setOptionsConstState] = useState<number>();\n\n  const [optionsState, setOptionsState] = useState<string>();\n  const [monthlyContribution, setMonthlyContribution] = useState<number>(0);\n\n  const [menu, setMenu] = useState(true);\n\n  //Adjust starting month\n  const [startMonth, setStartMonth] = useState(1);\n\n  useEffect(() => {\n    const storedData = localStorage.getItem('dataPersist');\n    const monthlyContributionStorage = localStorage.getItem(\n      'monthlyContribution',\n    );\n    if (storedData) {\n      setData(JSON.parse(storedData));\n    }\n    if (monthlyContributionStorage) {\n      setMonthlyContribution(JSON.parse(monthlyContributionStorage));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('dataPersist', JSON.stringify(data));\n    localStorage.setItem('savedDataDate', JSON.stringify(Date.now()));\n    localStorage.setItem(\n      'monthlyContribution',\n      JSON.stringify(monthlyContribution),\n    );\n  });\n\n  const handleUpdate = (month: number, index: number) => {\n    let initialData = [...data];\n    initialData[month - 1].monthData.splice(index, 1);\n    setData(initialData);\n    handleUpdateDataState();\n  };\n\n  const handleRemoveContribution = (month: number, index: number) => {\n    let initialData = [...data];\n    initialData[month - 1].monthContributions.splice(index, 1);\n    setData(initialData);\n    handleUpdateDataState();\n  };\n\n  const handleInitialInput = (arg1: number) => {\n    if (arg1 > 0) {\n      setInitialFunding(arg1);\n    }\n  };\n\n  const handleAdditionExpense = (\n    costTitle: string,\n    costAmount: number,\n    optionsState: number,\n  ) => {\n    let object = [...data];\n    object[optionsState - 1].monthData.push({\n      title: costTitle,\n      cost: costAmount,\n      monthIN: optionsState,\n    });\n    handleUpdateDataState();\n  };\n\n  const handleAdditionContribution = (\n    contributionTitle: string,\n    contributionAmount: number,\n    optionsConstState: number,\n  ) => {\n    let object = [...data];\n    object[optionsConstState - 1].monthContributions.push({\n      title: contributionTitle,\n      contribution: contributionAmount,\n      monthIN: optionsConstState,\n    });\n    handleUpdateDataState();\n  };\n\n  const handleUpdateDataState = () => {\n    if (initialFunding > 0 || monthlyContribution > 0) {\n      let object = [...data];\n\n      const sumMonthlyCost = (monthIndex: number, begBalance: number) => {\n        const totalCost = object[monthIndex].monthData.reduce(function(\n          acc,\n          num,\n        ) {\n          return acc + num.cost;\n        },\n        0);\n\n        const contribution = object[monthIndex].monthContributions.reduce(\n          function(acc, num) {\n            return acc + num.contribution;\n          },\n          0,\n        );\n        monthIndex >= startMonth\n          ? (object[monthIndex].endBalance =\n              begBalance + +monthlyContribution + contribution - totalCost)\n          : (object[monthIndex].endBalance =\n              begBalance + contribution - totalCost);\n      };\n\n      const januaryCosts = object[0].monthData.reduce(function(acc, num) {\n        return acc + num.cost;\n      }, 0);\n\n      //January settings\n      const janContribution = object[0].monthContributions.reduce(function(\n        acc,\n        num,\n      ) {\n        return acc + num.contribution;\n      },\n      0);\n\n      object[0].begBalance = initialFunding;\n      object[0].endBalance =\n        initialFunding + janContribution + monthlyContribution - januaryCosts;\n\n      object.map((number, index) => {\n        if (number.monthId !== 1) {\n          /// 1 index for February\n          object[index].begBalance = object[index - 1].endBalance;\n          sumMonthlyCost(index, object[index].begBalance);\n        }\n      });\n      setData(object);\n    }\n  };\n\n  const handleSampleData = () => {\n    setData(TestData);\n    setMonthlyContribution(700);\n  };\n\n  return (\n    <section>\n      <div className=\"App\">\n        {menu === false && (\n          <div onClick={() => setMenu(true)} className=\"openTab\">\n            &raquo;\n          </div>\n        )}\n        {menu && (\n          <section className=\"App-header\">\n            <div onClick={() => setMenu(false)} className=\"menuOpen\">\n              &laquo;\n            </div>\n            <h2 className=\"appTitle\">Sinking Fund</h2>\n            <section className=\"inputSection\">\n              <div className=\"inputLabel\">\n                <label className=\"inputSection\">\n                  Initial Funding\n                  <input\n                    type=\"number\"\n                    value={initialFunding}\n                    onChange={(e) =>\n                      handleInitialInput(parseFloat(e.currentTarget.value))\n                    }\n                    className=\"inputBox\"\n                  ></input>\n                  {initialFunding > 0 && (\n                    <button onClick={(e) => handleUpdateDataState()}>\n                      Submit\n                    </button>\n                  )}\n                </label>\n              </div>\n              <div className=\"inputLabel\">\n                <label className=\"inputSection\">\n                  Monthly Contribution\n                  <input\n                    type=\"number\"\n                    value={monthlyContribution}\n                    onChange={(e) =>\n                      setMonthlyContribution(parseFloat(e.currentTarget.value))\n                    }\n                    className=\"inputBox\"\n                  ></input>\n                  {monthlyContribution > 0 && (\n                    <button onClick={(e) => handleUpdateDataState()}>\n                      Apply Contribution\n                    </button>\n                  )}\n                </label>\n              </div>\n              <div className=\"inputLabel\">\n                <label className=\"inputSection\">\n                  Expense:\n                  <input\n                    type=\"text\"\n                    value={costTitle}\n                    onChange={(e) => setCostTitle(e.currentTarget.value)}\n                    placeholder=\"Name of Expense\"\n                    className=\"inputBox\"\n                  ></input>\n                  <input\n                    type=\"number\"\n                    value={costAmount}\n                    onChange={(e) =>\n                      setCostAmount(parseFloat(e.currentTarget.value))\n                    }\n                    className=\"inputBox\"\n                  ></input>\n                  <select\n                    id=\"month\"\n                    value={optionsState}\n                    onChange={(e) => setOptionsState(e.currentTarget.value)}\n                    required\n                    className=\"inputBox\"\n                  >\n                    <option value={0}>SELECT ONE</option>\n                    <option value={1}>January</option>\n                    <option value={2}>February</option>\n                    <option value={3}>March</option>\n                    <option value={4}>April</option>\n                    <option value={5}>May</option>\n                    <option value={6}>June</option>\n                    <option value={7}>July</option>\n                    <option value={8}>August</option>\n                    <option value={9}>September</option>\n                    <option value={10}>October</option>\n                    <option value={11}>November</option>\n                    <option value={12}>December</option>\n                  </select>\n                  {optionsState !== undefined && costAmount > 0 && (\n                    <button\n                      className=\"submit\"\n                      onClick={() =>\n                        handleAdditionExpense(\n                          costTitle,\n                          costAmount,\n                          parseInt(optionsState),\n                        )\n                      }\n                    >\n                      Submit\n                    </button>\n                  )}\n                </label>\n              </div>\n              <div className=\"inputLabel\">\n                <label className=\"inputSection\">\n                  Single Contribution:\n                  <input\n                    type=\"text\"\n                    value={contributionTitle}\n                    onChange={(e) =>\n                      setContributionTitle(e.currentTarget.value)\n                    }\n                    placeholder=\"Name of Contribution\"\n                    className=\"inputBox\"\n                  ></input>\n                  <input\n                    type=\"number\"\n                    value={contributionAmount}\n                    onChange={(e) =>\n                      setContributionAmount(parseFloat(e.currentTarget.value))\n                    }\n                    className=\"inputBox\"\n                  ></input>\n                  <select\n                    id=\"month\"\n                    value={optionsConstState}\n                    onChange={(e) =>\n                      setOptionsConstState(parseInt(e.currentTarget.value))\n                    }\n                    required\n                    className=\"inputBox\"\n                  >\n                    <option value={0}>SELECT ONE</option>\n                    <option value={1}>January</option>\n                    <option value={2}>February</option>\n                    <option value={3}>March</option>\n                    <option value={4}>April</option>\n                    <option value={5}>May</option>\n                    <option value={6}>June</option>\n                    <option value={7}>July</option>\n                    <option value={8}>August</option>\n                    <option value={9}>September</option>\n                    <option value={10}>October</option>\n                    <option value={11}>November</option>\n                    <option value={12}>December</option>\n                  </select>\n                  {optionsConstState !== undefined && contributionAmount > 0 && (\n                    <button\n                      className=\"submit\"\n                      onClick={() =>\n                        handleAdditionContribution(\n                          contributionTitle,\n                          contributionAmount,\n                          optionsConstState,\n                        )\n                      }\n                    >\n                      Submit\n                    </button>\n                  )}\n                  <div>Adjust Start Month</div>\n                  <select\n                    id=\"month\"\n                    value={optionsConstState}\n                    onChange={(e) =>\n                      setStartMonth(parseInt(e.currentTarget.value))\n                    }\n                    required\n                    className=\"inputBox\"\n                  >\n                    <option value={1}>January</option>\n                    <option value={2}>February</option>\n                    <option value={3}>March</option>\n                    <option value={4}>April</option>\n                    <option value={5}>May</option>\n                    <option value={6}>June</option>\n                    <option value={7}>July</option>\n                    <option value={8}>August</option>\n                    <option value={9}>September</option>\n                    <option value={10}>October</option>\n                    <option value={11}>November</option>\n                    <option value={12}>December</option>\n                  </select>\n                </label>\n              </div>\n            </section>\n          </section>\n        )}\n        <main className=\"mainSection\">\n          {data.map((data, index) => (\n            <section\n              key={index}\n              className={data.monthId >= startMonth ? 'monthCard' : 'hidden'}\n            >\n              <h2 className=\"cardTitle\">{data.monthName}</h2>\n              <div\n                className={\n                  data.begBalance >= 0\n                    ? 'positiveBalance monthInputs'\n                    : 'negativeBalance monthInputs'\n                }\n              >\n                <div\n                  className={\n                    data.begBalance >= 0 ? 'positiveBalance' : 'negativeBalance'\n                  }\n                >\n                  <span className=\"monthHeader\"> Beginning Balance:</span> $\n                  {data.begBalance.toFixed(2)}\n                </div>\n              </div>\n              <div\n                className={\n                  data.endBalance >= 0\n                    ? 'positiveBalance monthEndBalance'\n                    : 'negativeBalance monthEndBalance'\n                }\n              >\n                <div className=\"monthExpenses\">\n                  {(monthlyContribution > 0 ||\n                    data.monthContributions.length > 0) && (\n                    <>\n                      <div className=\"monthHeader\"> Month Contributions</div>\n                      {monthlyContribution > 0 && (\n                        <div>${monthlyContribution} </div>\n                      )}\n                    </>\n                  )}\n\n                  {data.monthContributions.length > 0 &&\n                    data.monthContributions.map((data, index) => (\n                      <div key={index}>\n                        {data.title} ${data.contribution}\n                        <button\n                          onClick={() =>\n                            handleRemoveContribution(data.monthIN, index)\n                          }\n                        >\n                          X\n                        </button>\n                      </div>\n                    ))}\n                </div>\n                {data.monthData.length > 0 && (\n                  <div className=\"monthExpenses\">\n                    <div className=\"monthHeader\">Month Expenses</div>\n                    {data.monthData.map((data, index) => (\n                      <div key={index}>\n                        {data.title} ${data.cost}\n                        {data.monthIN && (\n                          <button\n                            onClick={() => handleUpdate(data.monthIN, index)}\n                          >\n                            X\n                          </button>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                )}\n                <span className=\"monthHeader\"> Ending Balance:</span> $\n                {data.endBalance.toFixed(2)}\n              </div>\n            </section>\n          ))}\n        </main>\n      </div>\n      <button onClick={() => localStorage.clear()}>Clear Storage</button>\n      <button onClick={() => setData(StartData)}>Start From Scratch</button>\n      <button onClick={() => handleSampleData()}>Example Data</button>\n      <Table data={data} />\n      <Footer />\n    </section>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}